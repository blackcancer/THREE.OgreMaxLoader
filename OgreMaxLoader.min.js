!function(){THREE.Cache.enabled=!0,THREE.OgreMaxLoader=function(e){this.manager=void 0!==e?e:new THREE.LoadingManager,this.internalManager=new THREE.LoadingManager,this.objectRoot={},this.path="",this.url=""},THREE.OgreMaxLoader.prototype={constructor:THREE.OgreMaxLoader,get texturePath(){return void 0===this._texturePath&&(this._texturePath=""),this._texturePath},get withCredentials(){return void 0===this._withCredentials&&(this._withCredentials=!1),this._withCredentials},set texturePath(e){if("string"!=typeof e)return console.error("THREE.DotMaterialLoader.texturePath: Muste be a String!"),-1;this._texturePath=e},set withCredentials(e){if(typeof e!==boolean)return console.error("THREE.XMLOgreLoader.withCredentials: Muste be a boolean!"),-1;this._withCredentials=e},load:function(e,t,n,r){function a(t){var n=(new DOMParser).parseFromString(t,"text/xml");data=s.parse(n),data.scene&&(s.objectRoot.scene=data.scene),data.mesh&&(s.objectRoot.mesh=data.mesh),data.skeleton&&(s.objectRoot.skeleton=data.skeleton),s.internalManager.itemEnd(e)}function o(e){}function i(t){s.internalManager.itemError(e)}var s=this,l=new THREE.FileLoader(s.manager);t=t||function(){},n=n||function(){},r=r||function(){},this.internalManager.onStart=function(e,t,n){console.groupCollapsed("[OgreMaxLoader]"),console.log("[OgreMaxLoader] Started loading "+e),console.log("\t\tLoaded: "+t+"/"+n)},this.internalManager.onLoad=function(){if(console.log("[OgreMaxLoader] All files loaded!"),console.groupEnd(),s.objectRoot.scene){var n,r=s.objectRoot.scene.children[0];if(n=s.url.split("/"),n=n[n.length-1],n=n.split("."),n=n>2?(n=n.pop()).join("."):n[0],r)for(var a=0,o=r.children.length;a<o;a++)for(var i=r.children[a],l=0,c=i.children.length;l<c;l++)if((m=i.children[l]).name&&s.objectRoot[n]){var u=s.objectRoot[n].materials;m.material=u}s.manager.itemEnd(e),t(s.objectRoot.scene)}if(s.objectRoot.mesh){var m=s.objectRoot.mesh;if(s.objectRoot.skeletonFile){var g=s.objectRoot.skeletonFile;m.geometry.animations=g.anim,m.geometry.bones=g.skel.bones,m.add(g.skel.bones[0]),m.bind(g.skel)}s.manager.itemEnd(e),t(m)}s.objectRoot.skeleton&&(s.manager.itemEnd(e),t(s.objectRoot.skeleton))},this.internalManager.onProgress=function(e,t,r){console.log("[OgreMaxLoader] Loading "+e),console.log("\t\tLoaded: "+t+"/"+r),n(t,r)},this.internalManager.onError=function(e){console.log("[OgreMaxLoader] There was an error loading "+e)},this.path=THREE.Loader.prototype.extractUrlBase(e),this.url=e,this.manager.itemStart(e),this.internalManager.itemStart(e),l.setWithCredentials(this.withCredentials),l.load(e,a,o,i)},parse:function(e){function t(e){var t=new THREE.Group,n=e.getElementsByTagName("colourAmbient")[0];if(n){var r=new THREE.AmbientLight;a=H(n),r.color=a,t.add(r)}if(n=e.getElementsByTagName("colourBackground")[0]){var a=H(n);t.userData.background=a}if(n=e.getElementsByTagName("clipping")[0]){var o={near:V(n,"near",0),far:V(n,"far",1)};t.userData.clipping=o}return t.name="environment",t}function n(e){for(var t=new THREE.Group,n=e.getElementsByTagName("node"),a=0,o=n.length;a<o;a++){var i=r(n[a]);t.add(i)}return t.name="nodes",t.applyMatrix(M(e)),t}function r(e){var t=new THREE.Object3D,n=e.getElementsByTagName("entity")[0];if(n&&a(n,t),n=e.getElementsByTagName("node")[0]){var o=r(n);t.add(o)}return t.name=e.getAttribute("name"),t.visibility=_(e,"visibility",t.visibility),t.applyMatrix(M(e)),t}function a(e,t){function n(n){n.name=e.getAttribute("name")||n.name,n.castShadow=_(e,"castShadows",n.castShadow),n.castShadow=_(e,"receiveShadows",n.receiveShadow),t.add(n),S.internalManager.itemEnd(l)}function r(e){}function a(e){S.internalManager.itemError(l)}var s=new THREE.OgreMaxLoader(S.manager),l=S.path+e.getAttribute("meshFile")+".xml",c=e.getElementsByTagName("subentities")[0];S.internalManager.itemStart(l),s.load(l,n,r,a),c&&o(c),(c=e.getElementsByTagName("boneAttachments")[0])&&i(c)}function o(e){function t(e){for(var t=0,n=i.length;t<n;t++){var r=D(i[t],"index"),s=i[t].getAttribute("materialName");if(!e[r]||e[r].name!=s)throw S.internalManager.itemError(a),"Missing material at index "+r+": "+s;S.objectRoot[o]={},S.objectRoot[o].materials=e}S.internalManager.itemEnd(a)}function n(e){}function r(e){S.internalManager.itemError(a)}var a,o,i=e.getElementsByTagName("subentity");o=S.url.split("/"),o=o[o.length-1],(o=o.split("."))>2?(o=o.pop(),o=o.join(".")):o=o[0],a=S.path+o+".material";var s=new THREE.DotMaterialLoader(S.manager);S.internalManager.itemStart(a),s.texturePath=S.texturePath||S.path,s.load(a,t,n,r)}function i(e){for(var t={},n=e.getElementsByTagName("boneAttachment"),r=0,a=n.length;r<a;r++)t[n[r].getAttribute("bone")]=M(n[r]);return t}function s(e,t){for(var n=[],r=e.getElementsByTagName("submesh"),a=0,o=r.length;a<o;a++)n.push(l(r[a]));return n}function l(e,t){var n=new THREE.SkinnedMesh(new THREE.Geometry,new THREE.MeshPhongMaterial),r=[],a=[],o=e.getElementsByTagName("geometry")[0];if(n.userData.operationtype=e.getAttribute("operationtype"),n.userData.usesharedvertices=_(e,"usesharedvertices"),n.userData.use32bitindexes=_(e,"use32bitindexes"),!o&&!n.userData.usesharedvertices)throw new Error("No Geometry available for mesh");var i=n.userData.usesharedvertices?t:c(o);if(i.vertices.length!==D(o,"vertexcount"))throw new Error("vertices("+i.vertices.length+") and vertexcount("+D(o,"vertexcount")+") should match");return n.geometry.vertices=i.vertices,r=i.normals,a=i.uvs,(o=e.getElementsByTagName("faces")[0])&&g(o,n.geometry,r,a),(o=e.getElementsByTagName("boneassignments")[0])&&E(o,n.geometry),"line_list"===e.getAttribute("operationtype")&&(n=new THREE.Line(n.geometry,n.material)),n.updateMorphTargets(),n}function c(e){D(e,"vertexcount");vertices=[],normals=[],uvs=[],node=e.getElementsByTagName("vertexbuffer");for(var t=0,n=node.length;t<n;t++){var r=u(node[t]);vertices=vertices.concat(r.vertices),normals=normals.concat(r.normals),uvs=uvs.concat(r.uvs)}return{vertices:vertices,normals:normals,uvs:uvs}}function u(e){for(var t=_(e,"positions",!1),n=_(e,"normals",!1),r=D(e,"texture_coords",0),a=[],o=[],n=[],i=[],s=e.getElementsByTagName("vertex"),l=0;l<r;l++){var c=e.getAttribute("texture_coord_dimensions_"+l);c=parseInt(c.replace("float","")),a[l]=c}for(var l=0,u=s.length;l<u;l++)vertex=m(s[l],t,n,r,a),o=o.concat(vertex.vertice),n=n.concat(vertex.normal),i=i.concat(vertex.uv);return{vertices:o,normals:n,uvs:i}}function m(e,t,n,r,a){var o=[],i=[],s=[];if(t){l=e.getElementsByTagName("position")[0];o.push(N(l))}if(n){l=e.getElementsByTagName("normal")[0];i.push(N(l))}if(r>0)for(var l=e.getElementsByTagName("texcoord"),c=0;c<r;c++)switch(a[c]){case 1:s.push(A(l[c]));break;case 2:s.push(L(l[c]));break;case 3:s.push(j(l[c]))}return{vertice:o,normal:i,uv:s}}function g(e,t,n,r){for(var a=e.getElementsByTagName("face"),o=0,i=a.length;o<i;o++){var s=h(a[o],n,r);t.faces.push(s.face),t.faceVertexUvs[0].push(s.uvs)}t.computeBoundingBox(),t.computeBoundingSphere(),t.computeFaceNormals()}function h(e,t,n){var r=D(e,"v1"),a=D(e,"v2"),o=D(e,"v3"),i=[t[r],t[a],t[o]],s=[n[r],n[a],n[o]];return{face:new THREE.Face3(r,a,o,i),uvs:s}}function E(e,t){for(var n=new Array(t.vertices.length),r=e.getElementsByTagName("vertexboneassignment"),a=0,o=r.length;a<o;a++){var i=D(r[a],"vertexindex"),s=D(r[a],"boneindex"),l=V(r[a],"weight");n[i]||(n[i]={skinIndices:[],skinWeights:[]}),n[i].skinIndices.push(s),n[i].skinWeights.push(l)}for(var a=0,o=t.vertices.length;a<o;a++){var c=n[a].skinIndices[0]?n[a].skinIndices[0]:0,u=n[a].skinIndices[1]?n[a].skinIndices[1]:0,m=n[a].skinIndices[2]?n[a].skinIndices[2]:0,g=n[a].skinIndices[3]?n[a].skinIndices[3]:0,h=n[a].skinWeights[0]?n[a].skinWeights[0]:0,E=n[a].skinWeights[1]?n[a].skinWeights[1]:0,d=n[a].skinWeights[2]?n[a].skinWeights[2]:0,f=n[a].skinWeights[3]?n[a].skinWeights[3]:0;t.skinIndices.push(new THREE.Vector4(c,u,m,g)),t.skinWeights.push(new THREE.Vector4(h,E,d,f))}}function d(e,t){for(var n=0,r=e.getElementsByTagName("submeshname").length;n<r;n++)t=f(e,t);return t}function f(e,t){var n=e.getAttribute("name");return t[D(e,"index")].name=n,t}function p(e){for(var t=[],n=e.getElementsByTagName("bone"),r=0,a=n.length;r<a;r++){var o=v(n[r]);t[o.name]=o}return t}function v(e){var t=new THREE.Bone;e.getElementsByTagName("position")[0];return t.name=e.getAttribute("name"),t.userData.index=D(e,"id"),t.applyMatrix(M(e)),t}function T(e,t){for(var n=[],r=e.getElementsByTagName("boneparent"),a=0,o=r.length;a<o;a++){var i=t[r[a].getAttribute("parent")],s=t[r[a].getAttribute("bone")];i.add(s)}for(var l in t)n[t[l].userData.index]=t[l];return n}function b(e,t){for(var n=[],r=e.getElementsByTagName("animation"),a=0,o=r.length;a<o;a++)n.push(y(r[a],t));return n}function y(e,t){var n=e.getAttribute("name")||"default",r=V(e,"length"),a=x(e.getElementsByTagName("tracks")[0],t);return new THREE.AnimationClip(n,r,a)}function x(e,t){for(var n=[],r=e.getElementsByTagName("track"),a=0,o=r.length;a<o;a++)n=n.concat(w(r[a],t));return n}function w(e,t){var n=e.getAttribute("bone"),r=[],a=e.getElementsByTagName("keyframes")[0];if(n&&a){var o=R(a,t[n]);if(o.positions.times.length>0){var i=o.positions.times,s=o.positions.values,l=new THREE.VectorKeyframeTrack(".bones["+n+"].position",i,s);r.push(l)}if(o.rotations.times.length>0){var i=o.rotations.times,s=o.rotations.values,l=new THREE.QuaternionKeyframeTrack(".bones["+n+"].quaternion",i,s);r.push(l)}if(o.scales.times.length>0){var i=o.scales.times,s=o.scales.values,l=new THREE.VectorKeyframeTrack(".bones["+n+"].scale",i,s);r.push(l)}}else n?a||(console.error("THREE.OgreMaxLoader.parseTrack(): node <keyframes> not found!"),console.error(e)):(console.error("THREE.OgreMaxLoader.parseTrack(): bone attribute required!"),console.error(e));return r}function R(e,t){for(var n={times:[],values:[]},r={times:[],values:[]},a={times:[],values:[]},o=0,i=e.children.length;o<i;o++){var s=e.children[o];if("keyframe"===s.nodeName){var l=k(s),c=new THREE.Vector3,u=new THREE.Quaternion,m=new THREE.Vector3;l.matrix.decompose(c,u,m),n.times.push(l.time),r.times.push(l.time),a.times.push(l.time),c.add(t.position),u.multiplyQuaternions(t.quaternion,u).normalize(),n.values=n.values.concat(c.toArray()),r.values=r.values.concat(u.toArray()),a.values=a.values.concat(m.toArray())}else console.warn("THREE.OgreMaxLoader.parseKeyframes(): Unknown node name <"+s.nodeName+">")}return{positions:n,rotations:r,scales:a}}function k(e){return{time:V(e,"time"),matrix:M(e)}}function H(e){return new THREE.Color(V(e,"r"),V(e,"g"),V(e,"b"))}function M(e){var t=new THREE.Matrix4,n=new THREE.Vector3,r=new THREE.Vector3(1,1,1),a=new THREE.Quaternion,o=e.getElementsByTagName("scale")[0];return o&&(o.factor?r.set(V(e,"factor"),V(e,"factor"),V(e,"factor")):r.copy(N(o))),n.copy(N(e.getElementsByTagName("position")[0]||e.getElementsByTagName("translate")[0])),a.copy(B(e.getElementsByTagName("rotation")[0]||e.getElementsByTagName("rotate")[0])),t.compose(n,a,r)}function B(e){var t=new THREE.Quaternion;if(!e)return t;if(e.getAttribute("angle")){var n,r=V(e,"angle");n=e.getAttribute("axisX")?new THREE.Vector3(V(e,"axisX"),V(e,"axisY"),V(e,"axisZ")):N(e.getElementsByTagName("axis")[0]),t.setFromAxisAngle(n,r)}else if(e.getAttribute("qx"))t.x=V(e,"qx"),t.y=V(e,"qy"),t.z=V(e,"qz"),t.w=V(e,"qw");else if(e.getAttribute("angleX")){var a=V(e,"axisX"),o=V(e,"axisY"),i=V(e,"axisZ"),s=new THREE.Quaternion,l=new THREE.Quaternion;t.setFromAxisAngle(new THREE.Vector3(1,0,0),a),s.setFromAxisAngle(new THREE.Vector3(0,1,0),o),l.setFromAxisAngle(new THREE.Vector3(0,0,1),i),t.multiply(s),t.multiply(l)}return t}function N(e){return new THREE.Vector3(V(e,"x"),V(e,"y"),V(e,"z"))}function A(e){return V(e,"u")}function L(e){return new THREE.Vector2(V(e,"u"),V(e,"v"))}function j(e){return new THREE.Vector3(V(e,"u"),V(e,"v"),V(e,"w"))}function _(e,t,n){return e&&e.getAttribute(t)?"true"==e.getAttribute(t).toLowerCase():n||!1}function V(e,t,n){return e&&e.getAttribute(t)?parseFloat(e.getAttribute(t)):n||0}function D(e,t,n){return e&&e.getAttribute(t)?parseInt(e.getAttribute(t)):n||0}function O(e,t,n){if(e instanceof THREE.Geometry!=!1){var r,a=this.vertices.length,o=this.vertices,i=e.vertices,s=this.faces,l=e.faces,c=this.faceVertexUvs[0],u=e.faceVertexUvs[0],m=this.skinIndices,g=e.skinIndices,h=this.skinWeights,E=e.skinWeights;void 0===n&&(n=0),void 0!==t&&(r=(new THREE.Matrix3).getNormalMatrix(t));for(var d=0,f=o.length;d<f;d++)m[d]||(m[d]=new THREE.Vector4),h[d]||(h[d]=new THREE.Vector4);for(var d=0,f=i.length;d<f;d++)g[d]||(g[d]=new THREE.Vector4),m.push(g[d]);for(var d=0,f=i.length;d<f;d++)E[d]||(E[d]=new THREE.Vector4),h.push(E[d]);for(var d=0,f=i.length;d<f;d++){var p=i[d].clone();void 0!==t&&p.applyMatrix4(t),o.push(p)}for(d=0,f=l.length;d<f;d++){var v,T,b,y=l[d],x=y.vertexNormals,w=y.vertexColors;(v=new THREE.Face3(y.a+a,y.b+a,y.c+a)).normal.copy(y.normal),void 0!==r&&v.normal.applyMatrix3(r).normalize();for(var R=0,k=x.length;R<k;R++)T=x[R].clone(),void 0!==r&&T.applyMatrix3(r).normalize(),v.vertexNormals.push(T);v.color.copy(y.color);for(var R=0,k=w.length;R<k;R++)b=w[R],v.vertexColors.push(b.clone());v.materialIndex=y.materialIndex+n,s.push(v)}for(d=0,f=u.length;d<f;d++){var H=u[d],M=[];if(void 0!==H){for(var R=0,k=H.length;R<k;R++)M.push(H[R].clone());c.push(M)}}this.computeBoundingBox(),this.computeBoundingSphere(),this.computeFaceNormals()}else console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",e)}var S=this,C=e.documentElement.nodeName,P={};switch(C){case"scene":P.scene=function(e){var r=new THREE.Scene,a=e.getAttribute("upAxis")||"y",o=e.getElementsByTagName("nodes")[0];switch(a){case"x":r.up=new THREE.Vector3(1,0,0);break;case"y":r.up=new THREE.Vector3(0,1,0);break;case"z":r.up=new THREE.Vector3(0,0,1);break;default:r.up=new THREE.Vector3(0,1,0)}if(r.userData={formatVersion:V(e,"formatVersion",0),minOgreVersion:V(e,"minOgreVersion",0),ogreMaxVersion:V(e,"ogreMaxVersion",0),unitsPerMeter:V(e,"unitsPerMeter",1),unitType:e.getAttribute("unitType")||"meters",author:e.getAttribute("author")||void 0,application:e.getAttribute("application")||void 0},console.groupCollapsed("[OgreMaxLoader] dotScene info:"),console.log("Format Version:",r.userData.formatVersion),console.log("OgrMax Version:",r.userData.ogreMaxVersion),console.log("Author:",r.userData.author),console.log("Application:",r.userData.application),console.log("Unit type:",r.userData.unitType),console.log("scale:",r.userData.unitsPerMeter),o){i=n(o);r.add(i)}if(o=e.getElementsByTagName("environment")[0]){var i=t(o);r.add(i)}return console.groupEnd(),r}(e.documentElement);break;case"mesh":P.mesh=function(e){function t(e){S.objectRoot.skeletonFile={skel:e.skeleton,anim:e.animations},S.internalManager.itemEnd(f)}function n(e){}function r(e){S.internalManager.itemError(f)}var a,o,i=new THREE.Geometry,l=[],u=e.getElementsByTagName("sharedgeometry")[0];i.merge=O,u&&(o=c(u)),(u=e.getElementsByTagName("submeshes")[0])&&(l=s(u,o)),(u=e.getElementsByTagName("submeshname")[0])&&(l=d(u,l));for(var m=0,g=l.length;m<g;m++)i.mergeMesh(l[m]);var h=new THREE.MeshPhongMaterial;if(h.skinning=!0,h.morphTargets=!0,h.specular.setHSL(0,0,.1),h.color.setHSL(.6,0,.6),a=new THREE.SkinnedMesh(i,h),u=e.getElementsByTagName("skeletonlink")[0]){var E=new THREE.OgreMaxLoader(S.manager),f=S.path+u.getAttribute("name")+".xml";S.internalManager.itemStart(f),E.load(f,t,n,r)}return a}(e.documentElement);break;case"skeleton":P.skeleton=function(e){var t=[],n=[],r=new THREE.Skeleton,a=e.getElementsByTagName("bones")[0];return a&&(n=p(a)),(a=e.getElementsByTagName("bonehierarchy")[0])&&(r=new THREE.Skeleton(T(a,n))),(a=e.getElementsByTagName("animations")[0])&&(t=b(a,n)),{skeleton:r,animations:t}}(e.documentElement);break;default:console.error("THREE.XMLOgreLoader.parse(): Unknown node <"+C+">"),console.error("\tCannot parse xml file",S.url)}return P}},THREE.DotMaterialLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.DotMaterialLoader.prototype={constructor:THREE.DotMaterialLoader,get path(){return void 0===this._path&&(this._path=""),this._path},get statusDomElement(){return void 0===this._statusDomElement&&(this._statusDomElement=document.createElement("div")),console.warn("THREE.DotMaterialLoader: .statusDomElement has been removed."),this._statusDomElement},get texturePath(){return void 0===this._texturePath&&(this._texturePath=""),this._texturePath},get withCredentials(){return void 0===this._withCredentials&&(this._withCredentials=!1),this._withCredentials},set path(e){if("string"!=typeof e)return console.error("THREE.DotMaterialLoader.path: Muste be a String!"),-1;this._path=e},set texturePath(e){if("string"!=typeof e)return console.error("THREE.DotMaterialLoader.texturePath: Muste be a String!"),-1;this._texturePath=e},set withCredentials(e){if(typeof e!==boolean)return console.error("THREE.DotMaterialLoader.withCredentials: Muste be a boolean!"),-1;this._withCredentials=e},load:function(e,t,n,r){var a,o=this,i=new THREE.FileLoader(this.manager);t=t||function(){},n=n||function(){},r=r||function(){},this.path=""!==this.path?this.path:THREE.Loader.prototype.extractUrlBase(e),a=(a=e.split("/"))[a.length-1],this.url=e;var s=""!==this.texturePath?this.texturePath:this.path;return i.setWithCredentials(this.withCredentials),i.load(o.url,function(e){var n=o.parse(e,s);t(n)},n,r)},parse:function(e,t){function n(e,t){for(var n={},a=t,o=e.length;a<o;a++)switch(e[a].trim().split(/\s/)[0]){case"pass":var i=r(e,a++);a=i.index,n.pass=i.params;break;case"}":return{params:n,index:a++}}}function r(e,t){for(var n={},r=t,o=e.length;r<o;r++){var i=e[r].trim().split(/\s/),s=i[0];switch(s){case"ambient":case"diffuse":case"specular":case"emissive":var l=parseFloat(i[1]),c=parseFloat(i[2]),u=parseFloat(i[3]),m=parseFloat(i[4]);n[s]=[l,c,u,m];break;case"scene_blend":n[s]=[i[1],i[2]];break;case"texture_unit":n[s]||(n[s]=[]);var g=a(e,r++);r=g.index,n[s].push(g.params);break;case"}":return t++,{params:n,index:r++}}}}function a(e,t){for(var n={},r=t,a=e.length;r<a;r++){var o=e[r].trim().split(/\s/),i=o[0];switch(i){case"texture":n[i]=o[1];break;case"colour_op_ex":n[i]=[o[1],o[2],o[3]];break;case"colour_op_multipass_fallback":n[i]=[o[1],o[2]];break;case"}":return t++,{params:n,index:r++}}}}var o={},i=[];o=function(e){for(var t={},r=0,a=e.length;r<a;r++){var o=e[r].trim().split(/\s/);if("material"===o[0]){var i=n(e,r++);r=i.index,t[o[1]]=i.params}}return t}(e.split("\n"));for(key in o){var s=new THREE.MeshPhongMaterial;if(s.name=key,s.needsUpdate=!0,s.transparent=!0,s.skinning=!0,s.morphTargets=!0,o[key].pass.texture_unit&&((new THREE.TextureLoader).load(t+o[key].pass.texture_unit[0].texture,function(e){s.map=e,s.map.flipY=!1}),o[key].pass.texture_unit.length>1&&(new THREE.TextureLoader).load(t+o[key].pass.texture_unit[1].texture,function(e){s.emissiveMap=e,s.emissiveMap.flipY=!1})),o[key].pass.diffuse){l=o[key].pass.diffuse;s.diffuse=new THREE.Color(l[0],l[1],l[2])}if(o[key].pass.specular){l=o[key].pass.specular;s.specular=new THREE.Color(l[0],l[1],l[2]),s.shininess=l[4]}if(o[key].pass.emissive||o[key].pass.ambient){var l=o[key].pass.emissive||o[key].pass.ambient;s.emissive=new THREE.Color(l[0],l[1],l[2])}i.push(s)}return i}}}();